generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Clientes {
  id         String      @id @default(uuid())
  nome       String
  sobreNome  String
  email      String      @unique
  cel        String
  observacao String
  aparelhosId String?
  aparelhos   Aparelhos? @relation(fields: [aparelhosId], references: [id])
  ordens     Ordens[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Aparelhos {
  id         String    @id @default(uuid())
  marca      String
  modelo     String
  memoria    String
  hd         String
  placaMae   String
  carregador Boolean
  bateria    Boolean
  caracteristicas String
  equipamento String
  problema String
  numerodeSerie String
  observacaoRecebimento String
  clientesId String?
  ordens     Ordens[]
  clientes Clientes[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
 

}

model Ordens {
  id          String     @id @default(uuid())
  Counter Int @default(autoincrement())
  conclusao   String
  aparelhosId String?
  aparelhos   Aparelhos? @relation(fields: [aparelhosId], references: [id])
  clientesId String?
  clientes  Clientes? @relation(fields: [clientesId], references: [id])
  servicosId String?
  servicos  Servicos? @relation(fields: [servicosId], references: [id])
  numeroOs String
  dataEntrada DateTime
  dataPrevista DateTime
  dataSaida DateTime
  valorFrete String
  totalServicos String
  totalPecas String
  totalOrdem String
  observacaoServico String
  observacaoInterna String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Servicos {
  id          String   @id @default(uuid())
  name        String
  description String
  price       String
  ordens     Ordens[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
